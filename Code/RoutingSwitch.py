# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RoutingSwitch.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from jnpr.junos import Device

from Error import Ui_Error
from RoutingCreatorSwitch import Ui_StaticRoutingCreatorSwitch


class Ui_RoutingSwitch(object):
    switch = None
    PrevWindow = None
    RoutingSwitch = None
    idx = 0
    data = []
    dev = None

    def reload(self):
        self.data.clear()
        self.RoutingList.clear()
        self.idx = 0
        try:
            if not self.dev:
                self.dev = Device(host='14.0.0.2',
                                  user='root',
                                  password='Juniper')
                self.dev.open()
            data = self.dev.rpc.get_config(filter_xml='routing-options',
                                           options={'format': 'json'})

            self.routing = data['configuration']['routing-options']['static']['route']
            print(data)
            for static in self.routing:
                tmp = static["next-hop"]
                for i in tmp:
                    self.data.append([static["name"], i])
                    self.RoutingList.addItem(self.data[self.idx][0] + "|" + self.data[self.idx][1])
                    self.idx = self.idx + 1
        except Exception as e:
            self.openErrorWindow(e)

    def add(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_StaticRoutingCreatorSwitch()
        self.ui.setupUi(self.window, self.RoutingSwitch)
        self.ui.switch = self.switch
        self.window.show()

    def delete(self):
        try:
            row = self.RoutingList.currentRow()
            self.switch.load_merge_candidate(
                config="delete routing-options static route " + self.data[row][0] + " next-hop " + self.data[row][1])
            self.switch.commit_config()
            self.reload()
        except Exception as e:
            self.openErrorWindow(e)

    def edit(self):
        try:
            row = self.RoutingList.currentRow()
            name = self.RoutingList.item(row).text()
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_StaticRoutingCreatorSwitch()
            self.ui.setupUi(self.window, self.RoutingSwitch)
            self.ui.switch = self.switch
            self.ui.data = self.data
            self.ui.row = row
            self.ui.name = name
            self.ui.reload()
            self.window.show()
        except Exception as e:
            self.openErrorWindow(e)

    def exit(self):
        self.PrevWindow.show()
        self.centralwidget.window().close()

    def openErrorWindow(self, txt):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Error()
        self.ui.setupUi(self.window, self.RoutingSwitch)
        self.ui.reload(txt)
        self.window.show()

    def setupUi(self, RoutingSwitch, PrevWindow):
        self.PrevWindow = PrevWindow
        self.PrevWindow.hide()
        self.RoutingSwitch = RoutingSwitch

        RoutingSwitch.setObjectName("RoutingSwitch")
        RoutingSwitch.resize(390, 475)
        RoutingSwitch.setMinimumSize(QtCore.QSize(390, 475))
        RoutingSwitch.setMaximumSize(QtCore.QSize(390, 475))
        self.centralwidget = QtWidgets.QWidget(RoutingSwitch)
        self.centralwidget.setObjectName("centralwidget")
        self.RoutingList = QtWidgets.QListWidget(self.centralwidget)
        self.RoutingList.setGeometry(QtCore.QRect(40, 30, 131, 301))
        self.RoutingList.setObjectName("RoutingList")
        self.SelectBtn = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.edit())
        self.SelectBtn.setGeometry(QtCore.QRect(190, 110, 75, 23))
        self.SelectBtn.setObjectName("SelectBtn")
        self.DeleteBtn = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.delete())
        self.DeleteBtn.setGeometry(QtCore.QRect(190, 150, 75, 23))
        self.DeleteBtn.setObjectName("DeleteBtn")
        self.AddBtn = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.add())
        self.AddBtn.setGeometry(QtCore.QRect(190, 70, 75, 23))
        self.AddBtn.setObjectName("AddBtn")
        self.ReloadBtn = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.reload())
        self.ReloadBtn.setGeometry(QtCore.QRect(200, 400, 75, 23))
        self.ReloadBtn.setObjectName("ReloadBtn")
        self.ExitBtn = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.exit())
        self.ExitBtn.setGeometry(QtCore.QRect(290, 400, 75, 23))
        self.ExitBtn.setObjectName("CommitBtn")
        RoutingSwitch.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(RoutingSwitch)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 390, 21))
        self.menubar.setObjectName("menubar")
        RoutingSwitch.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(RoutingSwitch)
        self.statusbar.setObjectName("statusbar")
        RoutingSwitch.setStatusBar(self.statusbar)

        self.retranslateUi(RoutingSwitch)
        QtCore.QMetaObject.connectSlotsByName(RoutingSwitch)

    def retranslateUi(self, RoutingSwitch):
        _translate = QtCore.QCoreApplication.translate
        RoutingSwitch.setWindowTitle(_translate("RoutingSwitch", "PyNet"))
        self.SelectBtn.setText(_translate("RoutingSwitch", "Select"))
        self.DeleteBtn.setText(_translate("RoutingSwitch", "Delete"))
        self.AddBtn.setText(_translate("RoutingSwitch", "Add"))
        self.ReloadBtn.setText(_translate("RoutingSwitch", "Reload"))
        self.ExitBtn.setText(_translate("RoutingSwitch", "Back"))


