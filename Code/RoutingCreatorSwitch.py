# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'StaticRoutingCreatorSwitch.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import ipaddress
from PyQt5 import QtCore, QtGui, QtWidgets

from Error import Ui_Error


class Ui_StaticRoutingCreatorSwitch(object):
    PrevWindow = None
    dev = None
    row = None
    name = None
    data = None
    switch = None
    StaticRoutingCreatorSwitch = None

    def reload(self):
        _translate = QtCore.QCoreApplication.translate

        self.NetworkEdit.setText(_translate("StaticRoutingCreatorSwitchFirewall", self.data[self.row][0]))
        self.NextHopEdit.setText(_translate("StaticRoutingCreatorSwitchFirewall", self.data[self.row][1]))

    def valid(self):
        try:
            ipaddress.ip_network(self.NetworkEdit.text())
            ipaddress.ip_address(self.NextHopEdit.text())
            return True
        except Exception as e:
            self.openErrorWindow(e)
            return False

    def commit(self):
        try:
            if self.valid():
                if self.row is not None:
                    if self.NetworkEdit == self.data[self.row][0] and self.NextHopEdit == self.data[self.row][1]:
                        self.exit()
                    else:
                        self.switch.load_merge_candidate(
                            config="delete routing-options static route " + self.data[self.row][0] + " next-hop " +
                                   self.data[self.row][1])
                self.switch.load_merge_candidate(
                    config="set routing-options static route " + self.NetworkEdit.text() + " next-hop " + self.NextHopEdit.text())
                self.switch.commit_config()
                self.exit()
        except Exception as e:
            self.openErrorWindow(e)
    def exit(self):
        self.PrevWindow.show()
        self.centralwidget.window().close()

    def openErrorWindow(self, txt):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Error()
        self.ui.setupUi(self.window, self.StaticRoutingCreatorSwitch)
        self.ui.reload(txt)
        self.window.show()

    def setupUi(self, StaticRoutingCreatorSwitch, PrevWindow):
        self.PrevWindow = PrevWindow
        self.PrevWindow.hide()
        self.StaticRoutingCreatorSwitch = StaticRoutingCreatorSwitch

        StaticRoutingCreatorSwitch.setObjectName("StaticRoutingCreatorSwitch")
        StaticRoutingCreatorSwitch.resize(350, 220)
        StaticRoutingCreatorSwitch.setMinimumSize(QtCore.QSize(350, 220))
        StaticRoutingCreatorSwitch.setMaximumSize(QtCore.QSize(350, 220))
        self.centralwidget = QtWidgets.QWidget(StaticRoutingCreatorSwitch)
        self.centralwidget.setObjectName("centralwidget")
        self.NetworkLabel = QtWidgets.QLabel(self.centralwidget)
        self.NetworkLabel.setGeometry(QtCore.QRect(20, 20, 61, 16))
        self.NetworkLabel.setObjectName("NetworkLabel")
        self.NetworkEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.NetworkEdit.setGeometry(QtCore.QRect(20, 40, 171, 20))
        self.NetworkEdit.setObjectName("NetworkEdit")
        """self.MaskEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.MaskEdit.setGeometry(QtCore.QRect(20, 90, 171, 20))
        self.MaskEdit.setText("")
        self.MaskEdit.setObjectName("MaskEdit")
        self.MaskLabel = QtWidgets.QLabel(self.centralwidget)
        self.MaskLabel.setGeometry(QtCore.QRect(20, 70, 91, 16))
        self.MaskLabel.setObjectName("MaskLabel")"""
        self.NextHopEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.NextHopEdit.setGeometry(QtCore.QRect(20, 90, 171, 20))
        self.NextHopEdit.setText("")
        self.NextHopEdit.setObjectName("NextHopEdit")
        self.nextHopLabel = QtWidgets.QLabel(self.centralwidget)
        self.nextHopLabel.setGeometry(QtCore.QRect(20, 70, 101, 16))
        self.nextHopLabel.setObjectName("nextHopLabel")
        self.commitBtn = QtWidgets.QPushButton(self.centralwidget)
        self.commitBtn.setGeometry(QtCore.QRect(230, 110, 75, 23))
        self.commitBtn.setObjectName("commitBtn")
        self.exitBtn = QtWidgets.QPushButton(self.centralwidget)
        self.exitBtn.setGeometry(QtCore.QRect(230, 80, 75, 23))
        self.exitBtn.setObjectName("exitBtn")
        StaticRoutingCreatorSwitch.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(StaticRoutingCreatorSwitch)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 350, 21))
        self.menubar.setObjectName("menubar")
        StaticRoutingCreatorSwitch.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(StaticRoutingCreatorSwitch)
        self.statusbar.setObjectName("statusbar")
        StaticRoutingCreatorSwitch.setStatusBar(self.statusbar)

        self.retranslateUi(StaticRoutingCreatorSwitch)
        QtCore.QMetaObject.connectSlotsByName(StaticRoutingCreatorSwitch)

    def retranslateUi(self, StaticRoutingCreatorSwitch):
        _translate = QtCore.QCoreApplication.translate
        StaticRoutingCreatorSwitch.setWindowTitle(_translate("StaticRoutingCreatorSwitch", "PyNet"))
        self.NetworkLabel.setText(_translate("StaticRoutingCreatorSwitch", "Network"))
        self.nextHopLabel.setText(_translate("StaticRoutingCreatorSwitch", "Next-Hop"))
        self.commitBtn.setText(_translate("StaticRoutingCreatorSwitch", "Commit"))
        self.exitBtn.setText(_translate("StaticRoutingCreatorSwitch", "Exit"))

